(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const a=new Uint8Array(16);function n(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(a)}const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));const s=function(t,a,s){if(e.randomUUID&&!a&&!t)return e.randomUUID();const o=(t=t||{}).random||(t.rng||n)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,a){s=s||0;for(let e=0;e<16;++e)a[s+e]=o[e];return a}return function(e,t=0){return r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]}(o)};class o{constructor(e,t,a,n){this.name=e,this.race=t,this.classes=a,this.description=n,this.weaponArray=[],this.showWeapons=()=>this.weaponArray.map((e=>`\n                <div class="card rounded" id="show">\n                    <div class="card-body">\n                        <h5 class="card-title">Weapon Name: ${e.weapName}</h5>\n                        <p class="card-text">Weapon Type: ${e.weaponType}</p>\n                        <p class="card-text">Weapon Element: ${e.element}</p>\n                        <p class="card-text">Weapon Description: ${e.weapDescription}</p>\n                        <button type='submit' class="btn btn-danger btn-sm" id="rmWeaponBtn" data-weapon="${e.weaponId}">Remove Weapon</button>\n                    </div>\n                </div>\n            `)),this._id=s(),this.weaponArray=this.weaponArray}get id(){return this._id}}class c{constructor(e,t,a,n){this.weaponId=s(),this.weapName=e,this.weaponType=t,this.element=a,this.weapDescription=n}get weaponsId(){return this.weaponId}}let d=document.getElementById("charaForm");console.log(d);const i=new class{constructor(){this.characters=[]}addCharacter(e){this.characters.push(e),this.updateCharaList()}removeCharacter(e){const t=this.characters.findIndex((t=>t.id===e));-1!==t&&this.characters.splice(t,1),this.updateCharaList()}updateCharaList(){const e=document.getElementById("character");e.innerHTML="",this.characters.forEach((t=>{const a=`\n                <div class="card mb-3 rounded">\n                    <div class="card-body">\n                        <h5 class="card-title">Name: ${t.name}</h5>\n                        <p class="card-text">Character ID: ${t.id}</p>\n                        <p class="card-text">Race: ${t.race}</p>\n                        <p class="card-text">Class: ${t.classes}</p>\n                        <p class="card-text">Description: ${t.description}</p>\n                        <p class="card-text">Weapons: ${t.showWeapons()}</p>\n                        <button type='submit' class="btn btn-danger btn-sm" data-task="${t.id}">Remove Character</button>\n                    </div>\n                </div>\n            \n            `;e.insertAdjacentHTML("beforeend",a)})),e.querySelectorAll(".btn-danger").forEach((e=>{e.addEventListener("click",(()=>{const t=e.getAttribute("data-task");t&&this.removeCharacter(t)}))})),e.querySelectorAll(".btn-danger").forEach((e=>{e.addEventListener("click",(()=>{const t=e.getAttribute("data-weapon");t&&this.removeWeapon(t)}))}))}updateWeapon(e,t){for(let a of this.characters)a.id===t&&a.weaponArray.push(e);this.updateCharaList()}removeWeapon(e){for(let t of this.characters){const a=t.weaponArray.findIndex((t=>t.weaponId===e));console.log(a),-1!==a&&t.weaponArray.splice(a,1)}this.updateCharaList()}};d.addEventListener("submit",(e=>{e.preventDefault();const t=document.getElementById("charaName"),a=document.querySelectorAll("#raceRadio"),n=document.querySelectorAll("#classRadio"),r=document.getElementById("description");let s="human",c="healer";a.forEach((e=>{e.checked&&(s=e.value)})),n.forEach((e=>{e.checked&&(c=e.value)}));let p=t.value,l=r.value;console.log(p,s,c,l);const u=new o(p,s,c,l);i.addCharacter(u),d.reset()}));let p=document.getElementById("weaponForm");p.addEventListener("submit",(e=>{e.preventDefault();const t=document.getElementById("weaponName"),a=document.getElementById("weaponType"),n=document.getElementById("weaponElement"),r=document.getElementById("weaponDescription"),s=document.getElementById("charaId");let o=t.value,d=r.value,l=a.value,u=n.value,h=s.value;console.log(o,d,l,u);const m=new c(o,l,u,d);i.updateWeapon(m,h),p.reset()}))})();